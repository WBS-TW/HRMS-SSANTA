edge [color = black]
A -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'Collection of (meta)information']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'Collection of \\n (meta)information']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'Collection of \\n metadata']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'Collection of \\n metadata']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
}
")
install.packages("processx")
library(tidyverse)
library(DiagrammeR)
library(plotly)
library(processx)
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Finding Cl/Br among groups']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Collect different groups']
B2 [label = 'QA/QC']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'Suspect list of Cl/Br compounds']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Suspect screening']
E2 [label = 'Nontarget']
F1 [label = 'Mass defect plots']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
E2 <- {F1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Finding Cl/Br among groups']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Collect different groups']
B2 [label = 'QA/QC']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'Suspect list of Cl/Br compounds']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Suspect screening']
E2 [label = 'Nontarget']
F1 [label = 'Mass defect plots']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
E2 -> {F1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = false]
A [label = 'Finding Cl/Br among groups']
node [color = black, fillcolor = white, fixedsize = false]
B1 [label = 'Collect different groups']
B2 [label = 'QA/QC']
node [color = black, fillcolor = white, fixedsize = false]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'Suspect list of Cl/Br compounds']
node [color = black, fillcolor = white, fixedsize = false]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = false]
E1 [label = 'Suspect screening']
E2 [label = 'Nontarget']
F1 [label = 'Mass defect plots']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
E2 -> {F1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = false]
A [label = 'Finding Cl/Br among groups']
node [color = black, fillcolor = white, fixedsize = false]
B1 [label = 'Collect different groups']
B2 [label = 'QA/QC']
node [color = black, fillcolor = white, fixedsize = false]
C1 [label = 'Sample different groups']
C2 [label = 'Suspect list of Cl/Br compounds']
node [color = black, fillcolor = white, fixedsize = false]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = false]
E1 [label = 'Suspect screening']
E2 [label = 'Nontarget']
F1 [label = 'Mass defect plots']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {C1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
E2 -> {F1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'QA/QC']
C3 [label = 'Collection of \\n metadata']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 <- {D1}
C3 -> {E1}
D1 -> {E1}
}
")
library(tidyverse)
library(DiagrammeR)
library(plotly)
library(processx)
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'QA/QC']
C3 [label = 'Collection of \\n metadata']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 <- {D1}
C3 -> {E1}
D1 -> {E1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'QA/QC']
C3 [label = 'Collection of \\n metadata']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {B1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {D1}
C3 -> {E1}
D1 -> {E1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'QA/QC']
C3 [label = 'Collection of \\n metadata']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B1 -> {C1 C2 C3}
C1 -> {D1}
C2 -> {D1}
C3 -> {E1}
D1 -> {E1}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = false]
A [label = 'Finding Cl/Br among groups']
node [color = black, fillcolor = white, fixedsize = false]
B1 [label = 'Collect different groups']
B2 [label = 'QA/QC']
node [color = black, fillcolor = white, fixedsize = false]
C1 [label = 'Sample different groups']
C2 [label = 'Suspect list of Cl/Br compounds']
node [color = black, fillcolor = white, fixedsize = false]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = false]
E1 [label = 'Suspect screening']
E2 [label = 'Nontarget']
F1 [label = 'Mass defect plots']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {C1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
E2 -> {F1}
}
")
library(tidyverse)
library(DiagrammeR)
library(plotly)
library(processx)
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = false]
A [label = 'Indoor dust collected \\n among different \\n use categories']
node [color = black, fillcolor = white, fixedsize = false]
B1 [label = 'Collect different groups']
B2 [label = 'QA/QC']
node [color = black, fillcolor = white, fixedsize = false]
C1 [label = 'Sample different groups']
C2 [label = 'Suspect list of Cl/Br compounds']
node [color = black, fillcolor = white, fixedsize = false]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = false]
E1 [label = 'Suspect screening']
E2 [label = 'Nontarget']
F1 [label = 'Mass defect plots']
# edge statements
edge [color = black]
A -> {B1}
B2 -> {C1}
B1 -> {C1 C2}
C1 -> {D1}
C2 -> {E1}
D1 -> {E1}
E2 -> {F1}
}
")
library(tidyverse)
library(DiagrammeR)
library(plotly)
library(processx)
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = false]
# A [label = 'XX']
#
# node [color = black, fillcolor = white, fixedsize = false]
# B [label = 'XX']
#
#
#
# node [color = black, fillcolor = white, fixedsize = false]
# C [label = 'xx']
#
node [color = black, fillcolor = white, fixedsize = false]
D [label = 'xx']
E [label = 'xx']
# edge statements
edge [color = black]
# A -> {B}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = false]
A [label = 'XX']
node [color = blue, fillcolor = white, fixedsize = false]
B [label = 'XX']
node [color = black, fillcolor = white, fixedsize = false]
C [label = 'xx']
node [color = black, fillcolor = white, fixedsize = false]
D [label = 'xx']
E [label = 'xx']
# edge statements
edge [color = black]
A -> {B}
}
")
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = false]
A [label = 'a']
node [color = blue, fillcolor = white, fixedsize = false]
B [label = 'b']
node [color = black, fillcolor = white, fixedsize = false]
C [label = 'c']
node [color = black, fillcolor = white, fixedsize = false]
D [label = 'd']
E [label = 'e']
# edge statements
edge [color = black]
A -> {B}
}
")
