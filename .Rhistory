"Lens 1",
"Lens 2",
"Lens 3",
"Electron lens voltage",
"Emission current (50-60 uA)",
"IT (< 1)",
"Normalized target level (NL) (clean source 1E9)",
"Fore vacuum (< 6E-2 mbar)",
"Ultrahigh vacuum (< 9E-10 mbar)"
)
)
DT::datatable(TuneParams)
knitr::include_graphics("images/Metgem_tsneParams.png", dpi = 100)
knitr::kable(readxl::read_xls("images/MSConvert.xlsx"))
readxl::read_xls("images/MSConvert.xlsx")
readxl::read_xls("images/MSConvert.xlsx")
read_excel("images/MSConvert.xlsx")
library(tidyverse)
library(readxl)
library(kableExtra)
library(DiagrammeR)
library(plotly)
library(processx)
knitr::kable(read_excel("images/MSConvert.xlsx"))
install.packages("xaringan")
library(reticulate)
usethis::edit_r_profile()
which()
which("R")
Sys.info()
R.version
install.packages(c("bookdown", "blogdown"))
install.packages("kableExtra")
library(tidyverse)
library(readxl)
library(kableExtra)
library(DiagrammeR)
library(plotly)
library(processx)
knitr::include_graphics("images/target_vs_nontarget.png")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'QA/QC']
C3 [label = 'Collection of \\n metadata']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B1 -> {C1 C2 C3}
C1 -> {D1}
C2 -> {C1}
C2 -> {D1}
C3 -> {E1}
D1 -> {E1}
}
")
install.packages("DiagrammeR")
library(tidyverse)
library(readxl)
library(kableExtra)
library(DiagrammeR)
library(plotly)
library(processx)
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Hypothesis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'Experimental design']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C1 [label = 'Sampling design \\n and collection']
C2 [label = 'QA/QC']
C3 [label = 'Collection of \\n metadata']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
D1 [label = 'Chemical analysis']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
E1 [label = 'Data analysis']
# edge statements
edge [color = black]
A -> {B1}
B1 -> {C1 C2 C3}
C1 -> {D1}
C2 -> {C1}
C2 -> {D1}
C3 -> {E1}
D1 -> {E1}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw data']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B [label = 'MS-DIAL']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> {B}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw data']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> {B1} -> {B2}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw data']
A1 [label = 'In-house msp library']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> {B1} -> {B2}
A1 -> {E}
E -> {F}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw data']
A1 [label = 'In-house \\n msp ibrary']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> {B1} -> {B2}
A1 -> {E}
E -> {F}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw data']
A1 [label = 'In-house \\n msp ibrary']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> {B1} -> {B2}
A1 -> {E}
B2 -> {F}
E -> {F}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw data']
A1 [label = 'In-house \\n msp ibrary']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
B3 [label = 'NIST msp']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> {B1} -> {B2}
A1 -> {E}
B2 -> {F} -> {B3}
E -> {F}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw data']
A1 [label = 'In-house \\n msp ibrary']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
B3 [label = 'NIST msp']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> {B1} -> {B2}
A1 -> {E}
B2 -> {F} -> {B3} -> {G}
E -> {F}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw mzML data']
A1 [label = 'In-house \\n msp ibrary']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
B3 [label = 'NIST msp']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> {B1} -> {B2}
A -> {D}
A1 -> {E}
B2 -> {F} -> {B3} -> {G}
B2 -> {C}
E -> {F}
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw mzML data']
A1 [label = 'In-house \\n msp ibrary']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
B3 [label = 'NIST msp']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> B1 -> B2
A -> D
A1 -> E
B2 -> F -> B3 -> G
B2 -> C
E -> F
}
")
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = false]
# A [label = 'Indoor dust collected \\n among different \\n use categories']
#
# node [color = black, fillcolor = white, fixedsize = false]
# B1 [label = 'Collect different groups']
# B2 [label = 'QA/QC']
#
#
# node [color = black, fillcolor = white, fixedsize = false]
# C1 [label = 'Sample different groups']
# C2 [label = 'Suspect list of Cl/Br compounds']
node [color = black, fillcolor = white, fixedsize = false]
D1 [label = 'Sample extraction']
D1_1 [label = 'Hexane 3 mL']
D1_2 [label = 'Hexane: Acetone (1:1) 3 mL']
D1_3 [label = 'Toluene 3 mL']
D2 [label = 'Combine and split 1:1']
D3_1 [label = 'GC']
D3_2 [label = 'LC']
D4 [label = 'split 1:1']
E1 [label = 'GC-HRMS']
E2 [label = 'LC-HRMS']
#
#
# node [color = black, fillcolor = white, fixedsize = false]
# F1 [label = 'Suspect screening']
# F2 [label = 'Nontarget']
#
# G1 [label = 'Mass defect plots']
# edge statements
edge [color = black]
# A -> {B1}
# B2 -> {C1}
# B1 -> {C1 C2}
# C1 -> {D1}
D1 -> {D1_1}
D1_1 -> {D1_2}
D1_2 -> {D1_3}
D1_1 -> {D2}
D1_2 -> {D2}
D2 -> {D3_1}
D2 -> {D3_2}
D3_1 -> {D4}
D1_3 -> {D4}
D3_2 -> {E2}
D4 -> {E1}
D1_3 -> {E1}
}
")
library(tidyverse)
library(readxl)
library(kableExtra)
library(DiagrammeR)
library(plotly)
library(processx)
install.packages("reticulate")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
library(devtools)
install_github("jokergoo/ComplexHeatmap")  # in order to get the newest version of ComplexHeatmap
library(tidyverse)
library(readxl)
library(kableExtra)
library(DiagrammeR)
library(plotly)
library(processx)
# Diagrammer: rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html
grViz("
digraph Scheme {
# graph statement
graph [layout = dot, overlap = false, rankdir = LR]
# node statements
node [shape = box,
fontname = Helvetica, fontsize = 35, style = filled]
node [color = black, fillcolor = white, fixedsize = true, width = 4, height = 2]
A [label = 'Raw mzML data']
A1 [label = 'In-house \\n msp ibrary']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
B1 [label = 'MS-DIAL']
B2 [label = 'RIKEN msp' ]
B3 [label = 'NIST msp']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
C [label = 'MS-LIMA']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
D [label = 'ToppView (OpenMS)']
node [color = black, fillcolor = white, fixedsize = true, width = 6, height = 2]
E [label = 'Lib2Nist']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
F [label = 'NIST SearchMS']
node [color = black, fillcolor = white, fixedsize = true, width = 5, height = 2]
G [label = 'RamSearch']
# edge statements
edge [color = black]
A -> B1 -> B2
A -> D
A1 -> E
B2 -> F -> B3 -> G
B2 -> C
E -> F
}
")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages(c("bookdown", "blogdown", "shiny"))
install.packages(c("plotly", "tidymodels"))
install.packages("BiocManager")
Sys.getenv("PATH")
BINPREF
